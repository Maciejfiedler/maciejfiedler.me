version: "3"

services:

  database:
    build:
      context: ./database
    container_name: prod_database
    networks:
      website:
        ipv4_address: 172.26.0.104

  backend:
    build:
      context: ./backend
      dockerfile: Dev-Dockerfile
    container_name: prod_backend
    ports: 
      - 5000:5000
    volumes: # for Hot-reload
      - ./backend:/app
    networks:
      website:
        ipv4_address: 172.26.0.103
    environment:
      - FLASK_APP=setup.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
    depends_on:
      - database

        
  frontend:
    build:
      context: ./frontend
      dockerfile: Dev-Dockerfile
    container_name: prod_frontend
    ports: 
      - 3000:3000
    volumes: # for Hot-reload
      - ./frontend:/app
    networks:
      website:
        ipv4_address: 172.26.0.102
    depends_on:
      - backend

  webserver:
    build: 
      context: ./webserver
    container_name: prod_webserver
    ports: 
      - 80:80
      - 443:443
    networks: 
      website:
        ipv4_address: 172.26.0.101
    depends_on: 
      - frontend
      
networks:
  website:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/24
